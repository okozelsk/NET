<?xml version="1.0" encoding="UTF-8"?>
<demo dataFolder=".\\Data">

  <!--
    This demo case demonstrates the simple form of classical ESN reservoir setup to predict next Low, High and Close share prices.
    Elastic net regression is used as forecasting readout.
    Time series contains real share prices of TTOO title from https://finance.yahoo.com/quote/TTOO/history?p=TTOO.
    The last recorded prices are from 2018/03/02 so network is predicting next High, Low and Close prices for the following
    business day 2018/03/05 (where real prices were High=6.58$, Low=5.99$ and Close=6.15$).
  -->
  <case name="Forecast task High and Low share prices of TTOO (T2 Biosystems, Inc.): Small analog reservoir (ESN), Elastic regression readout">
    <samples fileName="TTOO.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingContinuous bootCycles="Auto" routeToReadout="true"/>
          <external>
            <field name="High" allowRoutingToReadout="true">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
            <field name="Low" allowRoutingToReadout="true">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
            <field name="Adj Close" allowRoutingToReadout="true">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="MainCfg">
            <pools>
              <pool name="Logistic pool" dimX="6" dimY="6" dimZ="6">
                <neuronGroups>
                  <analogGroup name="Exc-Logistic" role="Excitatory" relShare="1" signalingRestriction="NoRestriction" readoutDensity="1">
                    <activationTanH/>
                    <retainment density="1">
                      <strength min="0" max="0.75" />
                    </retainment>
                  </analogGroup>
                  <analogGroup name="Inh-Logistic" role="Inhibitory" relShare="1" signalingRestriction="NoRestriction" readoutDensity="1">
                    <activationTanH/>
                    <retainment density="1">
                      <strength min="0" max="0.75"/>
                    </retainment>
                  </analogGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.25" relShareEI="0.25" relShareIE="0.25" relShareII="0.25" avgDistance="NA" allowSelfConnection="true" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <spectralRadius>
              <analogScope value="0.9999"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="Main" cfg="MainCfg">
            <inputConnections>
              <inputConnection fieldName="High" poolName="Logistic pool" density="1">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="0.1" />
                  </analogTarget>
                </synapse>
              </inputConnection>
              <inputConnection fieldName="Low" poolName="Logistic pool" density="1">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="0.1" />
                  </analogTarget>
                </synapse>
              </inputConnection>
              <inputConnection fieldName="Adj Close" poolName="Logistic pool" density="1">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="0.1" />
                  </analogTarget>
                </synapse>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="true"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="false"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.1" folds="Auto">
        <readoutUnit name="High">
          <forecast>
            <realFeature standardize="true" keepReserve="true"/>
          </forecast>
          <ff>
            <activationIdentity/>
            <elasticRegrTrainer attemptEpochs="400" lambda="1e-6" alpha="0.5"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="Low">
          <forecast>
            <realFeature standardize="true" keepReserve="true"/>
          </forecast>
          <ff>
            <activationIdentity/>
            <elasticRegrTrainer attemptEpochs="400" lambda="1e-6" alpha="0.5"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="Adj Close">
          <forecast>
            <realFeature standardize="true" keepReserve="true"/>
          </forecast>
          <ff>
            <activationIdentity/>
            <elasticRegrTrainer attemptEpochs="400" lambda="1e-6" alpha="0.5"/>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>


  <!--
    This demo case demonstrates successful use of the new ability of the pure analog ESN reservoir
    to generalize and separate inputs and to perform fast accurate classifications.
    The dataset is from https://archive.ics.uci.edu/ml/datasets/Libras+Movement and contains 15 classes of 24 instances each, where
    each class references to a hand movement type in LIBRAS. The hand movement is represented as a bidimensional curve performed
    by the hand in a period of time. The curves were obtained from videos of hand movements, with the Libras performance from 4 
    different people, during 2 sessions. Each video corresponds to only one hand movement and has about 7 seconds.    
    Each video corresponds to a function F in a functions space which is the continual version of the input dataset.
    In the video pre-processing, a time normalization is carried out selecting 45 frames from each video, in according 
    to an uniform distribution. In each frame, the centroid pixels of the segmented objects (the hand) are found, which 
    compose the discrete version of the curve F with 45 points. All curves are normalized in the unitary space.
    Each curve F is mapped in a representation with 90 features, with representing the coordinates of movement.
    Each instance represents 45 points on a bi-dimensional space, which can be plotted in an ordered way (from 1 through
    45 as the X co-ordinate) in order to draw the path of the movement.
  -->
  <case name="Classification task Libras Movement: Simple pure ESN reservoir, One neuron FF-Resilient classifier uses numOfFirings64 and lastBin32FiringHist predictors">
    <samples fileName="LibrasMovement.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingPatterned/>
          <external>
            <field name="coord_abcissa">
              <realFeature standardize="true" keepReserve="true"/>
            </field>
            <field name="coord_ordinate">
              <realFeature standardize="true" keepReserve="true"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="MainCfg">
            <pools>
              <pool name="PureESN" dimX="6" dimY="5" dimZ="5">
                <neuronGroups>
                  <analogGroup name="Exc-grp" role="Excitatory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <firingThreshold value="0.0025"/>
                  </analogGroup>
                  <analogGroup name="Inh-grp" role="Inhibitory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <firingThreshold value="0.0025"/>
                  </analogGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.25" relShareEI="0.25" relShareIE="0.25" relShareII="0.25" avgDistance="NA" allowSelfConnection="false" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <spectralRadius>
              <analogScope value="0.9999"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="Main" cfg="MainCfg">
            <inputConnections>
              <inputConnection fieldName="coord_abcissa" poolName="PureESN" density="0.25">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="1"/>
                  </analogTarget>
                </synapse>
              </inputConnection>
              <inputConnection fieldName="coord_ordinate" poolName="PureESN" density="0.25">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="1"/>
                  </analogTarget>
                </synapse>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="false"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="true"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.0825" folds="Auto">
        <readoutUnit name="curved swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="anti-clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="circle">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-up curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-down curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="tremble">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>


  <!--
    This demo case demonstrates classical setup of LSM reservoir consisting of the neurons having spiking activation function.
    The dataset is from https://archive.ics.uci.edu/ml/datasets/Libras+Movement and contains 15 classes of 24 instances each, where
    each class references to a hand movement type in LIBRAS. The hand movement is represented as a bidimensional curve performed
    by the hand in a period of time. The curves were obtained from videos of hand movements, with the Libras performance from 4 
    different people, during 2 sessions. Each video corresponds to only one hand movement and has about 7 seconds.    
    Each video corresponds to a function F in a functions space which is the continual version of the input dataset.
    In the video pre-processing, a time normalization is carried out selecting 45 frames from each video, in according 
    to an uniform distribution. In each frame, the centroid pixels of the segmented objects (the hand) are found, which 
    compose the discrete version of the curve F with 45 points. All curves are normalized in the unitary space.
    Each curve F is mapped in a representation with 90 features, with representing the coordinates of movement.
    Each instance represents 45 points on a bi-dimensional space, which can be plotted in an ordered way (from 1 through
    45 as the X co-ordinate) in order to draw the path of the movement.
  -->
  <case name="Classification task Libras Movement: Classical LSM reservoir, One neuron FF-Resilient classifier uses numOfFirings64 predictor">
    <samples fileName="LibrasMovement.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingPatterned/>
          <external>
            <field name="coord_abcissa">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
            <field name="coord_ordinate">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="MainCfg">
            <pools>
              <pool name="PureLSM" dimX="6" dimY="5" dimZ="5">
                <neuronGroups>
                  <spikingGroup name="Exc-grp" role="Excitatory" relShare="4" readoutDensity="1">
                    <activationAdExpIF/>
                    <bias min="0" max="0" randomSign="false" />
                  </spikingGroup>
                  <spikingGroup name="Inh-grp" role="Inhibitory" relShare="1" readoutDensity="1">
                    <activationAdExpIF/>
                    <bias min="0" max="0" randomSign="false" />
                  </spikingGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.3" relShareEI="0.2" relShareIE="0.4" relShareII="0.1" avgDistance="NA" allowSelfConnection="false" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <spectralRadius>
              <analogScope value="NA"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="Main" cfg="MainCfg">
            <inputConnections>
              <inputConnection fieldName="coord_abcissa" poolName="PureLSM" density="0.25">
                <synapse delayMethod="Random" maxDelay="0">
                  <spikingTarget scope="Excitatory"/>
                </synapse>
              </inputConnection>
              <inputConnection fieldName="coord_ordinate" poolName="PureLSM" density="0.25">
                <synapse delayMethod="Random" maxDelay="0">
                  <spikingTarget scope="Excitatory"/>
                </synapse>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="false"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="true"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.0825" folds="Auto">
        <readoutUnit name="curved swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="anti-clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="circle">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-up curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-down curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="tremble">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>



  <!--
    This demo case demonstrates successful use of the new ability of the pure analog ESN reservoir
    to generalize and separate inputs and to perform fast accurate classifications.
    The dataset is from https://archive.ics.uci.edu/ml/datasets/Libras+Movement and contains 15 classes of 24 instances each, where
    each class references to a hand movement type in LIBRAS. The hand movement is represented as a bidimensional curve performed
    by the hand in a period of time. The curves were obtained from videos of hand movements, with the Libras performance from 4 
    different people, during 2 sessions. Each video corresponds to only one hand movement and has about 7 seconds.    
    Each video corresponds to a function F in a functions space which is the continual version of the input dataset.
    In the video pre-processing, a time normalization is carried out selecting 45 frames from each video, in according 
    to an uniform distribution. In each frame, the centroid pixels of the segmented objects (the hand) are found, which 
    compose the discrete version of the curve F with 45 points. All curves are normalized in the unitary space.
    Each curve F is mapped in a representation with 90 features, with representing the coordinates of movement.
    Each instance represents 45 points on a bi-dimensional space, which can be plotted in an ordered way (from 1 through
    45 as the X co-ordinate) in order to draw the path of the movement.
  -->
  <case name="Classification task Libras Movement: Simple pure ESN reservoir, One neuron FF-Resilient classifier uses numOfFirings64 and lastBin32FiringHist predictors">
    <samples fileName="LibrasMovement.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingPatterned/>
          <external>
            <field name="coord_abcissa">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
            <field name="coord_ordinate">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="MainCfg">
            <pools>
              <pool name="PureESN" dimX="6" dimY="5" dimZ="5">
                <neuronGroups>
                  <analogGroup name="Exc-grp" role="Excitatory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <firingThreshold value="0.0025"/>
                  </analogGroup>
                  <analogGroup name="Inh-grp" role="Inhibitory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <firingThreshold value="0.0025"/>
                  </analogGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.25" relShareEI="0.25" relShareIE="0.25" relShareII="0.25" avgDistance="NA" allowSelfConnection="false" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <spectralRadius>
              <analogScope value="0.9999"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="Main" cfg="MainCfg">
            <inputConnections>
              <inputConnection fieldName="coord_abcissa" poolName="PureESN" density="0.25">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="1"/>
                  </analogTarget>
                </synapse>
              </inputConnection>
              <inputConnection fieldName="coord_ordinate" poolName="PureESN" density="0.25">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="1"/>
                  </analogTarget>
                </synapse>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="false"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="true"
                      firingBinPattern="true"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.0825" folds="Auto">
        <readoutUnit name="curved swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="anti-clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="circle">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-up curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-down curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="tremble">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>


  <!--
    This demo case demonstrates experimental setup of reservoir consisting of the neurons having spiking and analog activation functions.
    The dataset is from https://archive.ics.uci.edu/ml/datasets/Libras+Movement and contains 15 classes of 24 instances each, where
    each class references to a hand movement type in LIBRAS. The hand movement is represented as a bidimensional curve performed
    by the hand in a period of time. The curves were obtained from videos of hand movements, with the Libras performance from 4 
    different people, during 2 sessions. Each video corresponds to only one hand movement and has about 7 seconds.    
    Each video corresponds to a function F in a functions space which is the continual version of the input dataset.
    In the video pre-processing, a time normalization is carried out selecting 45 frames from each video, in according 
    to an uniform distribution. In each frame, the centroid pixels of the segmented objects (the hand) are found, which 
    compose the discrete version of the curve F with 45 points. All curves are normalized in the unitary space.
    Each curve F is mapped in a representation with 90 features, with representing the coordinates of movement.
    Each instance represents 45 points on a bi-dimensional space, which can be plotted in an ordered way (from 1 through
    45 as the X co-ordinate) in order to draw the path of the movement.
  -->
  <case name="Classification task Libras Movement: Experimental mixed reservoir, One neuron FF-Resilient classifier uses numOfFirings64 predictor">
    <samples fileName="LibrasMovement.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingPatterned/>
          <external>
            <field name="coord_abcissa">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
            <field name="coord_ordinate">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="MainCfg">
            <pools>
              <pool name="SpikingPool" dimX="5" dimY="5" dimZ="3">
                <neuronGroups>
                  <spikingGroup name="Exc-grp-spiking" role="Excitatory" relShare="4" readoutDensity="1">
                    <activationAdExpIF/>
                    <bias min="0" max="0" randomSign="false" />
                  </spikingGroup>
                  <spikingGroup name="Inh-grp-spiking" role="Inhibitory" relShare="1" readoutDensity="1">
                    <activationAdExpIF/>
                    <bias min="0" max="0" randomSign="false" />
                  </spikingGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.3" relShareEI="0.2" relShareIE="0.4" relShareII="0.1" avgDistance="NA" allowSelfConnection="false" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
              <pool name="AnalogPool" dimX="5" dimY="5" dimZ="3">
                <neuronGroups>
                  <analogGroup name="Exc-grp-analog" role="Excitatory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <firingThreshold value="0.0025"/>
                  </analogGroup>
                  <analogGroup name="Inh-grp-analog" role="Inhibitory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <firingThreshold value="0.0025"/>
                  </analogGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.25" relShareEI="0.25" relShareIE="0.25" relShareII="0.25" avgDistance="NA" allowSelfConnection="true" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <pool2PoolConns>
              <pool2PoolConn srcPool="AnalogPool" srcConnDensity="0.5" targetPool="SpikingPool" targetConnDensity="0.1" relShareEE="0.3" relShareEI="0.2" relShareIE="0.4" relShareII="0.1" constantNumOfConnections="false">
                <synapse/>
              </pool2PoolConn>
            </pool2PoolConns>
            <spectralRadius>
              <analogScope value="0.9999"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="Main" cfg="MainCfg">
            <inputConnections>
              <inputConnection fieldName="coord_abcissa" poolName="SpikingPool" density="0.25">
                <synapse delayMethod="Random" maxDelay="0"/>
              </inputConnection>
              <inputConnection fieldName="coord_ordinate" poolName="SpikingPool" density="0.25">
                <synapse delayMethod="Random" maxDelay="0"/>
              </inputConnection>
              <inputConnection fieldName="coord_abcissa" poolName="AnalogPool" density="0.25">
                <synapse delayMethod="Random" maxDelay="0"/>
              </inputConnection>
              <inputConnection fieldName="coord_ordinate" poolName="AnalogPool" density="0.25">
                <synapse delayMethod="Random" maxDelay="0"/>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="false"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="true"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.0825" folds="Auto">
        <readoutUnit name="curved swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical swing">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="anti-clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="clockwise arc">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="circle">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical straight-line">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical zigzag">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="horizontal wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="vertical wavy">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-up curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="face-down curve">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="tremble">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <resPropTrainer attempts="5" attemptEpochs="400"/>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>





  <!--
    This demo case demonstrates how to instantiate two independent reservoirs. Configuration definies ESN reservoir
    structure having one pool of 512 TanH analog neurons and two instances of the reservoir (hence in total 2x512=1024 analog neurons).
    QRD regression is used as predicting readout.
    Dataset contains Mackey Glass chaotic time series (tau=17) and network forecasts the next value.
  -->
  <case name="Forecast task Mackey Glass chaotic time series: Two analog reservoirs (ESN), QRD regression output">
    <samples fileName="MackeyGlass.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingContinuous bootCycles="Auto" routeToReadout="false"/>
          <external>
            <field name="Value" allowRoutingToReadout="true">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="ESNCfg">
            <pools>
              <pool name="Logistic pool" dimX="8" dimY="8" dimZ="8">
                <neuronGroups>
                  <analogGroup name="Exc-Logistic" role="Excitatory" relShare="1">
                    <activationTanH/>
                    <bias min="-0.75" max="0.75" randomSign="false" />
                    <retainment density="1">
                      <strength min="0.25" max="0.5" />
                    </retainment>
                  </analogGroup>
                  <analogGroup name="Inh-Logistic" role="Inhibitory" relShare="1">
                    <activationTanH/>
                    <bias min="-0.75" max="0.75" randomSign="false" />
                    <retainment density="1">
                      <strength min="0.25" max="0.5" />
                    </retainment>
                  </analogGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.25" relShareEI="0.25" relShareIE="0.25" relShareII="0.25" avgDistance="NA" allowSelfConnection="true" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <spectralRadius>
              <analogScope value="0.65"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="ESN reservoir #1" cfg="ESNCfg">
            <inputConnections>
              <inputConnection fieldName="Value" poolName="Logistic pool" density="0.5">
                <synapse/>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="true"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="false"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
          <reservoirInstance name="ESN reservoir #2" cfg="ESNCfg">
            <inputConnections>
              <inputConnection fieldName="Value" poolName="Logistic pool" density="0.5">
                <synapse/>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="true"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="false"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.1" folds="1">
        <readoutUnit name="Value">
          <forecast>
            <realFeature standardize="true" keepReserve="true"/>
          </forecast>
          <ff>
            <activationIdentity/>
            <qrdRegrTrainer attempts="1" attemptEpochs="1">
              <maxNoise min="0" max="0" steps="3"/>
            </qrdRegrTrainer>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>



  <!--
    This demo case demonstrates the simple form of classical ESN reservoir setup to predict next Low, High and Close share price.
    Reservoir consists of one pool of 6x6x6 TanH analog neurons.
    Elastic net regression is used as forecasting readout.
    Time series contains real share prices of TTOO title from https://finance.yahoo.com/quote/TTOO/history?p=TTOO.
    The last recorded prices are from 2018/03/02 so network is predicting next High, Low and Close prices for the following
    business day 2018/03/05 (where real prices were High=6.58$, Low=5.99$ and Close=6.15$).
  -->
  <case name="Forecast task High and Low share prices of TTOO (T2 Biosystems, Inc.): Small analog reservoir (ESN), Elastic regression readout">
    <samples fileName="TTOO.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingContinuous bootCycles="Auto" routeToReadout="true"/>
          <external>
            <field name="High" allowRoutingToReadout="true">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
            <field name="Low" allowRoutingToReadout="true">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
            <field name="Adj Close" allowRoutingToReadout="true">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="MainCfg">
            <pools>
              <pool name="Logistic pool" dimX="6" dimY="6" dimZ="6">
                <neuronGroups>
                  <analogGroup name="Exc-Logistic" role="Excitatory" relShare="1" signalingRestriction="AnalogOnly" readoutDensity="1">
                    <activationTanH/>
                    <retainment density="1">
                      <strength min="0" max="0.75" />
                    </retainment>
                  </analogGroup>
                  <analogGroup name="Inh-Logistic" role="Inhibitory" relShare="1" signalingRestriction="AnalogOnly" readoutDensity="1">
                    <activationTanH/>
                    <retainment density="1">
                      <strength min="0" max="0.75" />
                    </retainment>
                  </analogGroup>
                </neuronGroups>
                <interconnection density="0.1" relShareEE="0.25" relShareEI="0.25" relShareIE="0.25" relShareII="0.25" avgDistance="NA" allowSelfConnection="true" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <spectralRadius>
              <analogScope value="0.9999"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="Main" cfg="MainCfg">
            <inputConnections>
              <inputConnection fieldName="High" poolName="Logistic pool" density="1">
                <synapse>
                  <analogTarget>
                    <weight min="0" max="0.1" />
                  </analogTarget>
                </synapse>
              </inputConnection>
              <inputConnection fieldName="Low" poolName="Logistic pool" density="1">
                <synapse>
                  <analogTarget>
                    <weight min="0" max="0.1" />
                  </analogTarget>
                </synapse>
              </inputConnection>
              <inputConnection fieldName="Adj Close" poolName="Logistic pool" density="1">
                <synapse>
                  <analogTarget>
                    <weight min="0" max="0.1" />
                  </analogTarget>
                </synapse>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="true"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="false"
                      firingCount="false"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.1" folds="Auto">
        <readoutUnit name="High">
          <forecast>
            <realFeature standardize="true" keepReserve="true"/>
          </forecast>
          <ff>
            <activationIdentity/>
            <elasticRegrTrainer attemptEpochs="300" lambda="1e-6" alpha="0.5"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="Low">
          <forecast>
            <realFeature standardize="true" keepReserve="true"/>
          </forecast>
          <ff>
            <activationIdentity/>
            <elasticRegrTrainer attemptEpochs="300" lambda="1e-6" alpha="0.5"/>
          </ff>
        </readoutUnit>
        <readoutUnit name="Adj Close">
          <forecast>
            <realFeature standardize="true" keepReserve="true"/>
          </forecast>
          <ff>
            <activationIdentity/>
            <elasticRegrTrainer attemptEpochs="300" lambda="1e-6" alpha="0.5"/>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>



  <!--
    This demo case demonstrates pure ESN reservoir on long pattern.
    As a readout classifier is used Feed Forward network having one hidden layer of 20 TanH neurons and TanH output neuron.
    Used dataset is a pre-processed and re-structured/reshaped version of a very commonly used dataset featuring epileptic seizure detection.
    The dataset was converted from https://archive.ics.uci.edu/ml/datasets/Epileptic+Seizure+Recognition and contains 11500 EEG recordings
    each for 1 second. After conversion there are only 2 classes, where each EEG pattern corresponds to an epileptic seizure or not.
    Relevant paper: http://users.fs.cvut.cz/ivo.bukovsky/PROJEKT/Data/Realna/BIO/EEG/reference/PRE61907.pdf
  -->
  <case name="Classification task Recognition of the Epileptic Seizure Brain Activity (EEG):  Pure ESN reservoir, Feed forward network with hidden layer as a classifier">
    <samples fileName="EpilepticSeizureActivity_middle.csv"/>
    <stateMachineCfg randomizerSeek="0">
      <neuralPreprocessor>
        <input>
          <feedingPatterned/>
          <external>
            <field name="EEG">
              <realFeature standardize="true" keepReserve="false"/>
            </field>
          </external>
        </input>
        <reservoirCfgContainer>
          <reservoirCfg name="MainCfg">
            <pools>
              <pool name="Experimental" dimX="8" dimY="8" dimZ="5">
                <neuronGroups>
                  <analogGroup name="Exc-grp" role="Excitatory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <bias min="0" max="0" randomSign="false" />
                    <firingThreshold value="0.0025"/>
                    <retainment density="0">
                      <strength min="0.25" max="0.75"/>
                    </retainment>
                  </analogGroup>
                  <analogGroup name="Inh-grp" role="Inhibitory" relShare="1" readoutDensity="1" signalingRestriction="NoRestriction">
                    <activationTanH/>
                    <bias min="0" max="0" randomSign="false" />
                    <firingThreshold value="0.0025"/>
                    <retainment density="0">
                      <strength min="0.25" max="0.75"/>
                    </retainment>
                  </analogGroup>
                </neuronGroups>
                <interconnection density="0.05" relShareEE="0.25" relShareEI="0.25" relShareIE="0.25" relShareII="0.25" avgDistance="NA" allowSelfConnection="false" constantNumOfConnections="false">
                  <synapse/>
                </interconnection>
              </pool>
            </pools>
            <spectralRadius>
              <analogScope value="0.9999"/>
              <spikingScope value="NA"/>
            </spectralRadius>
          </reservoirCfg>
        </reservoirCfgContainer>
        <reservoirInstanceContainer>
          <reservoirInstance name="Main" cfg="MainCfg">
            <inputConnections>
              <inputConnection fieldName="EEG" poolName="Experimental" density="0.25">
                <synapse delayMethod="Random" maxDelay="0">
                  <analogTarget scope="All">
                    <weight min="0" max="1"/>
                  </analogTarget>
                </synapse>
              </inputConnection>
            </inputConnections>
            <predictors>
              <permission activation="false"
                      squaredActivation="false"
                      firingExpWRate="false"
                      firingFadingSum="true"
                      firingCount="false"
                      firingBinPattern="false"/>
            </predictors>
          </reservoirInstance>
        </reservoirInstanceContainer>
      </neuralPreprocessor>
      <readoutLayer testDataRatio="0.1" folds="Auto">
        <readoutUnit name="EpilepticSeizure">
          <classification>
            <binFeature/>
          </classification>
          <ff>
            <activationTanH/>
            <hiddenLayers>
              <layer neurons="10">
                <activationTanH/>
              </layer>
            </hiddenLayers>
            <resPropTrainer attempts="5" attemptEpochs="1000"/>
          </ff>
        </readoutUnit>
      </readoutLayer>
    </stateMachineCfg>
  </case>



</demo>


